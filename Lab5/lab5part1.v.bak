module lab05part1(x, r, clk, c, n, me, mo);
	input x, r, clk;
	output reg [2:0] c;
	output wire [2:0] n;
	output wire me, mo;

	assign n[2] = (~c[2] & c[1] & x) | (c[2] & ~c[1] & x) | (c[2] & ~c[0] & x);
	assign n[1] = (c[0] & x) | (~c[2] & x) | (~c[1] & x) | (~c[2] & ~c[1] & c[0]) | (c[2] & c[1] & c[0] & ~x);
	assign n[0] = (c[1] & x) | (c[2] & x) | (~c[2] & ~c[1] & ~x);
	assign me = (~c[2] & c[0]) | (c[1] & ~c[0] & x) | (c[2] & ~c[1] & x) | (~c[2] & ~c[1] & ~x);
	assign mo = (~c[2] & c[1]) | (c[2] & ~c[1]) | (c[2] & ~c[0]);
	
	always @(posedge clk) begin
		if (~r)
			c <= 3'b100;
		else 
			c <= n;
	end			
endmodule
